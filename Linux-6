process management
=====================
TM --> TL --> TM --> Senior --> Junior --> Frehser

TM --> 5 tasks for 5 TL

ls -l --> it creates a process and assign a process ID, executes the command in kernel --> get the o/p --> display on screen

ps

UID          PID    PPID  C STIME TTY          TIME CMD
root           1       0  0 May02 ?        00:00:15 /usr/lib/systemd/systemd --switched-root --system --deserialize=32
root           2       0  0 May02 ?        00:00:00 [kthreadd]
root           3       2  0 May02 ?        00:00:00 [rcu_gp]
root           4       2  0 May02 ?        00:00:00 [rcu_par_gp]
root           5       2  0 May02 ?        00:00:00 [slub_flushwq]
root           6       2  0 May02 ?        00:00:00 [netns]
root           8       2  0 May02 ?        00:00:00 [kworker/0:0H-events_highpri]
root          10       2  0 May02 ?        00:00:00 [mm_percpu_wq]

PID and PPID

ps -ef | grep <process-name>

üîç View Running Processes
===========================
| Command           | Description                                |
| ----------------- | ------------------------------------------ |
| `ps aux`          | Show all running processes (user + system) |
| `ps -ef`          | Alternative full-format listing            |
| `top`             | Real-time interactive view of processes    |
| `htop`            | Enhanced version of `top` (must install)   |
| `pidof <program>` | Get PID (process ID) of a running program  |
| `pgrep <name>`    | Search for process by name                 |
| `pstree`          | Display process hierarchy (tree)           |

üìå Process Details:
=====================
| Command                  | Description                             |
| ------------------------ | --------------------------------------- |
| `ps -p <PID>`            | Show info about a specific process      |
| `cat /proc/<PID>/status` | View process status                     |
| `lsof -p <PID>`          | List open files by a process            |
| `strace -p <PID>`        | Trace system calls of a running process |


foreground and background process
& to take process into background
kill PID --> request to terminate
kill -9 PID
üîÑ Control Processes:
======================
| Command                         | Description                          |
| ------------------------------- | ------------------------------------ |
| `kill <PID>`                    | Terminate a process by PID           |
| `kill -9 <PID>`                 | Forcefully kill (SIGKILL)            |
| `pkill <name>`                  | Kill by process name                 |
| `pkill -9 <name>`               | Force kill by name                   |
| `killall <name>`                | Kill all processes with exact name   |
| `nice -n <priority> <command>`  | Start process with specific priority |
| `renice -n <priority> -p <PID>` | Change priority of a running process |

systemctl status nginx
ps -ef | grep nginx

we have application running --> PID

10 users --> 0.1% CPU 0.1% RAM
2000 users --> 10% CPU, 20% RAM
10 users 

top -p PID --> check the resources used by particular process

Network management
===========================
how do you check open ports in linux

netstat -lntp

systemctl status <service-name>
ps -ef | grep service-name
netstat -lntp
top -p PID

3 tier architecture
===========================
desktop vs web application

resources usage more
hang
installation
upgrade
storage
compatability issues
no data security/backup
can't access everywhere

architecture is important

road side breakfast shop
==========================
single person --> less than 10

taking order, cooking the item, serving, payment collection

hotel
=====================
cook --> prepares the item
owner --> counter --> issuing tokens

let's say 20 members

100 members 

restaurant
=====================
captain --> welcomes the customer
waiter --> takes the order
chef --> prepares the order
waiter --> garnish with cabbage, onion, lemon, keera, etc.

directly to chef
==================
1. security
2. queue management --> reduces taste of item

select * from users where username = 'siva@joindevops.com' and password = 'siva123'

visual studio, putty, terraform, aws cli v2
